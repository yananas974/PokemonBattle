{
  "version": 3,
  "sources": ["empty-module:@remix-run/node", "../../../app/routes/_index.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1749135142609.1157\";\n}\n// REMIX HMR END\n\nimport { useActionData } from '@remix-run/react';\nimport { redirect } from '@remix-run/node';\nimport { Form } from '@remix-run/react';\nexport const action = async ({\n  request\n}) => {\n  // Comment\u00E9 la logique d'authentification pour tester la redirection directe\n  /*\n  const formData = await request.formData();\n  const username = formData.get('username')?.toString();\n  const password = formData.get('password')?.toString();\n   if (!username || !password) {\n    return json({ error: 'Tous les champs sont requis' }, { status: 400 });\n  }\n   if (username !== 'admin' || password !== '1234') {\n    return json({ error: 'Identifiants invalides' }, { status: 400 });\n  }\n  */\n\n  // Redirection directe vers la page /pokemon sans validation\n  return redirect('/login');\n};\nexport default function LoginPage() {\n  _s();\n  const actionData = useActionData();\n  return <div style={styles.container}>\n      <h1>Connexion</h1>\n      <Form method=\"post\" style={styles.form}>\n        <input type=\"text\" name=\"username\" placeholder=\"Nom d'utilisateur\" style={styles.input} required />\n        <input type=\"password\" name=\"password\" placeholder=\"Mot de passe\" style={styles.input} required />\n        <button type=\"submit\" style={styles.button}>\n          Jouer \u00E0 Pok\u00E9mon\n        </button>\n      </Form>\n      {/* Le message d'erreur est d\u00E9sactiv\u00E9 car on ne g\u00E8re plus l'auth */}\n      {/* {actionData?.error && <p style={{ color: 'red' }}>{actionData.error}</p>} */}\n    </div>;\n}\n_s(LoginPage, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = LoginPage;\nconst styles = {\n  container: {\n    maxWidth: '400px',\n    margin: '100px auto',\n    padding: '20px',\n    border: '1px solid #ddd',\n    borderRadius: '8px',\n    textAlign: 'center',\n    fontFamily: 'Arial, sans-serif'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '12px'\n  },\n  input: {\n    padding: '10px',\n    fontSize: '16px'\n  },\n  button: {\n    padding: '10px',\n    backgroundColor: '#ffcb05',\n    border: 'none',\n    borderRadius: '4px',\n    fontWeight: 'bold',\n    cursor: 'pointer'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACsBlB,kBAAyB;AAyBnB;AA9CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAyBe,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,OAAO,OAAO,WACtB;AAAA,uDAAC,QAAG,yBAAJ;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IACb,mDAAC,QAAK,QAAO,QAAO,OAAO,OAAO,MAChC;AAAA,yDAAC,WAAM,MAAK,QAAO,MAAK,YAAW,aAAY,qBAAoB,OAAO,OAAO,OAAO,UAAQ,QAAhG;AAAA;AAAA;AAAA;AAAA,aAAiG;AAAA,MACjG,mDAAC,WAAM,MAAK,YAAW,MAAK,YAAW,aAAY,gBAAe,OAAO,OAAO,OAAO,UAAQ,QAA/F;AAAA;AAAA;AAAA;AAAA,aAAgG;AAAA,MAChG,mDAAC,YAAO,MAAK,UAAS,OAAO,OAAO,QAAQ,qCAA5C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OARG;AAAA;AAAA;AAAA;AAAA,SAWL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAM,SAAS;AAAA,EACb,WAAW;AAAA,IACT,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,WAAW;AAAA,IACX,YAAY;AAAA,EACd;AAAA,EACA,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,eAAe;AAAA,IACf,KAAK;AAAA,EACP;AAAA,EACA,OAAO;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,EACZ;AAAA,EACA,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AACF;AACA,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
