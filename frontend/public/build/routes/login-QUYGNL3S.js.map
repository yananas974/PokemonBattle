{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1749134872234.004\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"@remix-run/react\";\nexport const loader = async () => {\n  const res = await fetch(\"http://pokemon-backend:3001/api/pokemon/fusion\");\n  const data = await res.json();\n  const formattedPokemon = data.pokemon.map(p => ({\n    id: p.id,\n    name: p.nameFr,\n    sprite: p.sprite_url\n  }));\n  return {\n    pokemon: formattedPokemon\n  };\n};\nexport default function Index() {\n  _s();\n  const {\n    pokemon\n  } = useLoaderData();\n  return <div style={{\n    padding: \"2rem\"\n  }}>\n      <h1>Pok\u00E9mon Fusion</h1>\n      <div style={{\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"1rem\"\n    }}>\n        {pokemon.map(p => <div key={p.id} style={{\n        border: \"1px solid #ccc\",\n        borderRadius: \"8px\",\n        padding: \"1rem\",\n        textAlign: \"center\",\n        width: \"120px\"\n      }}>\n            <img src={p.sprite} alt={p.name} style={{\n          width: \"96px\",\n          height: \"96px\"\n        }} />\n            <p>{p.name}</p>\n          </div>)}\n      </div>\n    </div>;\n}\n_s(Index, \"/4e5GOTbGCKaAVidqdRLwvf1pLE=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AA0CM;AAzCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2BAA6B,EAAE;AAAA,EACxE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACtB,cAAY,IAAI,eAAe;AACjC;AAgBe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,SAAS;AAAA,EACX,GACI;AAAA,uDAAC,QAAG,iCAAJ;AAAA;AAAA;AAAA;AAAA,WAAkB;AAAA,IAClB,mDAAC,SAAI,OAAO;AAAA,MACZ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,KAAK;AAAA,IACP,GACK,kBAAQ,IAAI,OAAK,mDAAC,SAAe,OAAO;AAAA,MACzC,QAAQ;AAAA,MACR,cAAc;AAAA,MACd,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,IACT,GACM;AAAA,yDAAC,SAAI,KAAK,EAAE,QAAQ,KAAK,EAAE,MAAM,OAAO;AAAA,QAC1C,OAAO;AAAA,QACP,QAAQ;AAAA,MACV,KAHI;AAAA;AAAA;AAAA;AAAA,aAGD;AAAA,MACC,mDAAC,OAAG,YAAE,QAAN;AAAA;AAAA;AAAA;AAAA,aAAW;AAAA,SAXa,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA,WAYhB,CAAM,KAjBV;AAAA;AAAA;AAAA;AAAA,WAkBA;AAAA,OAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
